html {
    background-color: blue;
    margin: 0px;
    padding: 0px;

}

.div1  {
    background-color: rgb(142, 202, 255);
    margin: 0px;
    width: 100%;
}

.div1 a, iframe,h1,h2,h3,h4,h5,h6  {
    /* 
        display: block; -> faz com que os elementos sejam criados um abaixo do outro.
        Elementos block padrão:
        div
        parágrafos (p)
        títulos (h1 - h6)

        display: inline; -> faz com que os elementos sejam criados um do lado do outro, ocupando
        apenas a largura/espaço necessário.
        Elementos inline por padrão:
        span
        link (a)
        imagem (img)

        display: none; -> O elemento continua existindo, mas não é exibido para o usuário no navegador.
                          O espaço do elemento não é ocupado.

    */
    display: block;
    margin: 0px;
}

.div1 p {
    margin: 0px;
    /* Colocando estilo da fonte */
    font-family: 'Verdana';

    /* Tamanho da fonte */
    font-size: 15px;

    /* 
        Expessura da fonte.
        font-weight: normal; -> Fonte normal.
        font-weight: bold; -> Fonte mais grossa.
    */
    font-weight: bold;
    

    /* 
    Aplicando linhas em texto.
    text-decoration: underline; -> Linha em baixo do texto.
    text-decoration: overline; -> Linha por cima do texto.
    text-decoration: none; -> Retira as linhas.
    */
    text-decoration: underline;
    

    /* Alinhando textos 
        text-align: left;           -> Alinha os textos para a esquerda.
        text-align: center;         -> Alinha os textos para o centro.
        text-align: right;          -> Alinha os textos para a direita.
        text-align: justify;        -> Os conteúdos inline são justificados. 
                                     Text should be spaced to line up its left 
                                     and right edges to the left and right edges of 
                                     the line box, except for the last line.
        text-align: justify-all;    -> Semelhante a justify, porém força a última linha a ser justificada.
        text-align: start;          -> Igual left se a direção é esquerda-para-direita e right se a direção é direita-para-esquerda.
        text-align: end;            ->Igual right se a direção é esquerda-para-direita e left se a direção é direita-para-esquerda.
        text-align: match-parent;   ->Similar to inherit, but the values start and end are calculated according the parent's direction (en-US) and are replaced by the adequate left or right value.    
    */
    text-align: center;

    /* Definindo altura das linhas
        line-height: 24px; -> Cada linha do parágrafo possui 24px de altura
    */
    line-height: 30px;
}

/*************************************************************************************************************/

.div2{
    background-color: rgb(190, 190, 190);
    width: 100%;
    padding: 10px;

    /* Largura da borda */
    border-width: 2px;

    /* Estilo da borda
        border-style: solid; -> Borda sólida
        border-style: dashed; -> Borda tracejada
        border-style: dotted; -> Borda pontilhada
        para acessar uma lista de estilos, basta usar as teclas ctrl + space
    */
    border-style: solid;
    /* Sem o estilo definido, a borda não aparece */

    /* Cor da borda */
    border-color: brown;

    /* Arredondamento de bordas */
    border-radius: 10px 20px 30px 40px;

    /* Maneira resumida de usar borda
        border: 2px dashed red;
        Primeiro valor é a grossura da borda
        Segundo valor é o estilo da borda
        Terceiro valor é a cor da borda
    */

}
.div2 p{
    /* Margin
    margin: 10px; -> Essa margem representa a distância para todos os lados do elemento.
    margin-top: 10px; -> Margem para a parte superiror.
    margin-right: 10px; ->  Margem para a esquerda.
    margin-bottom: 10px -> Margem para a base.
    margin-left: 10px; -> Margem para a esquerda.
    margin: 10px 20px; -> Margem para, respectivamente, 10px para topo e base, 20px para os lados.
    margin: 10px 20px 30px 40px; -> Margem para, respectivamente, topo, direita, base e esquerda.

    Uma maneira de centralizar um elemento usando margin é:
    margin: 10px auto; -> Isso faz com que as margens dos lados tenham o mesmo tamanho calculado automaticamente.

    Utilizando o valor 0 na margin, a margem do objeto é removida.

    */
    margin: 0px;

    /* Padding
    Espaço interno que fica ao redor do conteúdo do elemento, Serve para gerar espaços dentro do elemento
    Suas sintaxes são iguais ao do margin
    padding: 10px;
    padding-top: 10px;
    padding-right: 10px;
    padding-bottom: 10px;
    padding-lef: 10px;
    padding: 10px 20px;
    padding: 10px 20px 30px 40px;
    */
}

/*************************************************************************************************************/


.div3 .imagem-fundo{
    /*
        Para preencher o fundo de um elemento com uma imagem:
    */
    background-image: url(img/cat-1.jpg);

    /*
        Ao utilizar o background-image a imagem de fundo vai se repetir para preencher o fundo.
        Para impedir, basta usar o background-repeat com o valor no-repeat;
    */
    background-repeat: no-repeat;

    /*
        background-repeat: repeat-x     -> Repete a imagem horizontalmente.
        background-repeat: repeat-y     -> Repete a imagem verticalmente.

        Ao utilizar a propriedade background-repeat para não repetir a imagem ou então
        para repetir apenas em uma direção, podemos preencher o espaço que a imagem não 
        ocupa utilizando background-color.
    */

    /*
        Depois de inserir a imagem de fundo, podemos alterar sua posição utilizando background-position.

        background-position: center;        -> Centralizando a imagem de fundo.
        background-position: right;         -> Posicionando a imagem de fundo à direita.
        background-position: left;          -> Posicionando a imagem de fundo à esquerda.
        background-position: top;           -> Posicionando a imagem de fundo na parte superior do elemento.
        background-position: bottom;        -> Posicionando a imagem de fundo na parte inferior do elemento.

    */

    /* 
        Ajustando o tamanho da imagem de fundo.

        background-size: cover;     -> Imagem ocupa todo o espaço do elemento. 
                                       Apenas parte da imagem é exibida.
        background-size: contain;   -> Estica a imagem até que ela caiba no elemento sem perder sua proporção.
        
        Podemos utilizar dois valores e definir o tamanho do elemento que a imagem vai ocupar.
        O primeiro valor define a largura e o segundo a altura.
        background-size: 50% 70%;

        Para deixar a imagem estática, utilizamos a propriedade background-attachment.
        background-attachment: fixed;
    */

    /*
        Podemos escrever as propriedades do background de maneira reduzida.

        Basta usar a propriedade background e inserir os valores que deseja utilizar
        não importando a ordem.
        
        background: top right no-repeat #of0 fixed url(img/caminho-da-imagem.jpg);

        Também não há a necessidade de utilizar todos os valores.
    */

}

/*************************************************************************************************************/

/* 
    Valor relativo é aquele que define o valor com base em um outro elemento.

    vw é uma medida de valor relativo que se refere a largura da tela
    cada 1vw corresponde a 1% da largura da tela.
    O vw conta o espaço que fica por baixo da barra de rolagem como parte da tela.

    O vh funciona da mesma maneira que op vw, porém o vh faz referência a altura da tela.
*/

/* 
    Introdução ao calc

    Em alguns casos, queremos que a imagem ocupe toda a largura da tela.
    Porém, se precisarmos adicionar à imagem uma borda, margem ou padding isso irá quebrar a página.

    img {
        width: 100vw;
        margin: 30px;
    }

    A imagem continua tendo 100vw, mas a margem a afasta 
    30px de cada um dos lados dela, colocando-a fora da tela.

    Para impedir que isso aconteça, podemos utilizar o calc:

    img {
        width: calc(100vw - 60px);
        margin: 30px;
    }

    Através desse calc, tiramos 60px de largura da imagem (30px da direita, 30px da esquerda)
    fazendo com que a imagem ocupe 100vw.

*/

/* 
    Altura/Largura Máxima/Mínima de um elemento.

    min-height define a altura mínima que um elemento pode ter.
    max-height define a altura máxima que um elemento pode ter.

    min-width define a largura mínima que um elemento pode ter.
    max-width define a largura máxima que um elemento pode ter.
*/

/* 
    Overflow

    Imagine que você quer colocar um texto em uma área de tamanho fixo em uma página.
    Porém, esse texto é muito grande e acaba ultrapassando o tamanho da área
    Isso pode ser resolvido através do uso do overflow.

    O overflow garante que o conteúdo respeite as dimensões do elemento.
    Ele faz isso criando uma barra de rolagem que permite a leitura do texto sem ultrapassar o tamanho.

    Para utilizar ele, deve utilizar a propriedade overflow no elemento que queremos que tenha o tamanho
    respeitado.

    overflow: scroll;       -> Exibe uma barra de rolagem no elemento para garantir que o conteúdo
                               interno não ultrapasse o tamanho definido no CSS.
                               Uma barra de rolagem será exibida até mesmo quando o tamanho limite
                               não for ultrapassado. Exibe barra de rolagem vertical e horizontal.

    overflow: auto;         -> Exibe uma barra de rolagem apenas se o conteúdo ultrapassar o tamanho
                               limite do elemento.

    Para que o overflow afete apenas uma barra em específico, utilizamos as propriedades:
    overflow-x      -> Controla o scroll horizontal adicionando uma barra de rolagem horizontal.
    overflow-y      -> Controla o scroll vertical adicionando uma barra de rolagem vertical.

    Quando uma das propriedades acima é utilizada, a outra é automaticamente definida com o atributo auto.
    Isso faz com que, caso eu use o overflow-x, o valor da propriedade overflow-y será definido
    automaticamente com o valor auto, mesmo eu não declarando ela.
    Para resolver isso, garanta que o tamanho do elemento comporte o conteúdo dentro do limite, para que
    a barra de rolagem não seja exibida.

    As propriedades do overflow podem ser simplificadas:
    overflow: auto scroll;  -> Referem au overflow-x e overflow-y.
*/

/* 
    Visibility

    visibility é uma propriedade do CSS que controla a visibildiade de um elemento na tela.
    Possui duas propriedades mais usadas: visible e hidden.

    visible indica que o elemento está visível, esse é o valor padrão de todo elemento.
    hidden, por sua vês, deixa o elemento invisível na tela. Não ocupa o espaço do elemento.

    Apesar da semelhança com o display: none, visibility não remove o espaço do elemento da tela,
    não apenas o deixa invisível.
*/
